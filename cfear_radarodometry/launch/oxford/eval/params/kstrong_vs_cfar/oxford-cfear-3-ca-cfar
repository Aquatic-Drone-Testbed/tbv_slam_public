#!/bin/bash

export EVAL_OUTPUT_BASE_PATH="${BAG_LOCATION}/CFEAR_EVAL"
export BAG_BASE_PATH="${BAG_LOCATION}/oxford-eval-sequences"
export EVAL_DATASET="oxford"
export NR_WORKERS="8"
export KITTI_DIR=`rospack find kitti-odom-eval`
export EVALUATION_description="CA-CFAR-cfear-3"
export EVALUATION_sequence="2019-01-10-12-32-52-radar-oxford-10k 2019-01-16-13-09-37-radar-oxford-10k 2019-01-17-13-26-39-radar-oxford-10k 2019-01-18-14-14-42-radar-oxford-10k 2019-01-18-15-20-12-radar-oxford-10k 2019-01-16-11-53-11-radar-oxford-10k 2019-01-10-11-46-21-radar-oxford-10k 2019-01-18-14-46-59-radar-oxford-10k"
#export EVALUATION_sequence="2019-01-10-12-32-52-radar-oxford-10k"
export EVALUATION_radar_ccw="false"
export EVALUATION_soft_constraint="false"
export EVALUATION_disable_compensate="false"
export EVALUATION_cost_type="P2P"
export EVALUATION_submap_scan_size="4"
export EVALUATION_registered_min_keyframe_dist="1.5"
export EVALUATION_res="3" #DONT USE FLOATING POINT REPRESENTATION FOR WHAT CAN BE REPRESENTED AS INTEGERS

export EVALUATION_RANGE_RES="0.0438" 
export EVALUATION_loss_limit="0.1"
export EVALUATION_loss="Huber"
export EVALUATION_weight_intensity="false"
export EVALUATION_weight_option="0"

##################### UNIQUE PARAMETERS FOR THIS EXPERIMENT ###################3
export EVALUATION_filter_type="CA-CFAR"
export EVALUATION_zmin="20" #  IMPORTANT: extra noise floor criteria, this is a deviation from CA-CFAR due to data different from traditional radar data
export EVALUATION_kstrong="10" # IMPORTANT: NB_GUARD_CELLS For CA-CFAR
export EVALUATION_covar_scale="40 70 100 150 200 300 500" # IMPORTANT: Window size For CA-CFAR. Should be much larger than NB_GUARD_CELLS (named kstrong in this file)
export EVALUATION_regularization="0.1 0.05 0.01 0.005 0.001 0.0005 0.0001" # Window size For CA-CFAR
##################### UNIQUE PARAMETERS FOR THIS EXPERIMENT ###################3

echo "-----Loaded PARAMETER LIST -------"
 printf 'Sequence: %s\n' "${EVALUATION_sequence[@]}"
 printf 'CCW: %s\n' "${EVALUATION_radar_ccw[@]}"
 printf 'Soft constraints: %s\n' "${EVALUATION_soft_constraint[@]}"
 printf 'Disable compensate: %s\n' "${EVALUATION_disable_compensate[@]}"
 printf 'Cost type: %s\n' "${EVALUATION_cost_type[@]}"
 printf 'submap keyframes: %s\n' "${EVALUATION_submap_scan_size[@]}"
 printf 'Keyframe distance: %s\n' "${EVALUATION_registered_min_keyframe_dist[@]}"
 printf 'Resolutions: %s\n' "${EVALUATION_res[@]}"
 printf 'Kstrongest: %s\n' "${EVALUATION_kstrong[@]}"
 printf 'zmin: %s\n' "${EVALUATION_zmin[@]}"
echo "-----------------------------"





